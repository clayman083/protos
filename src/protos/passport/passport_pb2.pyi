"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import sys
import typing

import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Error(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Code:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CodeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            Error._Code.ValueType
        ],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        USER_NOT_FOUND: Error._Code.ValueType  # 0
        USER_ALREADY_EXIST: Error._Code.ValueType  # 1
        INVALID_TOKEN: Error._Code.ValueType  # 2

    class Code(_Code, metaclass=_CodeEnumTypeWrapper): ...
    USER_NOT_FOUND: Error.Code.ValueType  # 0
    USER_ALREADY_EXIST: Error.Code.ValueType  # 1
    INVALID_TOKEN: Error.Code.ValueType  # 2

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: global___Error.Code.ValueType
    message: builtins.str
    def __init__(
        self,
        *,
        code: global___Error.Code.ValueType = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["code", b"code", "message", b"message"]
    ) -> None: ...

global___Error = Error

@typing.final
class User(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    id: builtins.str
    email: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        email: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["email", b"email", "id", b"id"]
    ) -> None: ...

global___User = User

@typing.final
class RegisterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EMAIL_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    email: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        email: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["email", b"email", "password", b"password"]
    ) -> None: ...

global___RegisterRequest = RegisterRequest

@typing.final
class RegisterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def user(self) -> global___User: ...
    @property
    def error(self) -> global___Error: ...
    def __init__(
        self,
        *,
        user: global___User | None = ...,
        error: global___Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal["Type", b"Type", "error", b"error", "user", b"user"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal["Type", b"Type", "error", b"error", "user", b"user"],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["Type", b"Type"]
    ) -> typing.Literal["user", "error"] | None: ...

global___RegisterResponse = RegisterResponse

@typing.final
class LoginRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EMAIL_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    email: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        email: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["email", b"email", "password", b"password"]
    ) -> None: ...

global___LoginRequest = LoginRequest

@typing.final
class LoginResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    token: builtins.str
    def __init__(
        self,
        *,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["token", b"token"]) -> None: ...

global___LoginResponse = LoginResponse

@typing.final
class IdentifyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    token: builtins.str
    def __init__(
        self,
        *,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["token", b"token"]) -> None: ...

global___IdentifyRequest = IdentifyRequest

@typing.final
class IdentifyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def user(self) -> global___User: ...
    @property
    def error(self) -> global___Error: ...
    def __init__(
        self,
        *,
        user: global___User | None = ...,
        error: global___Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal["Type", b"Type", "error", b"error", "user", b"user"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal["Type", b"Type", "error", b"error", "user", b"user"],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["Type", b"Type"]
    ) -> typing.Literal["user", "error"] | None: ...

global___IdentifyResponse = IdentifyResponse
